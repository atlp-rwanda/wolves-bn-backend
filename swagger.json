{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Barefoot Nomad APIS",
        "description": "Testing endpoints"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/users/signup": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Signup",
                "description": "Create account",
                "operationId": "createUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/userSignUp"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "Invalid URL"
                    },
                    "409": {
                        "description": "user already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/users/forgotPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "forgot password",
                "description": "User forgot password",
                "operationId": "forgot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/forgotPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "reset email sent successfully"
                    },
                    "404": {
                        "description": "no associated account found"
                    }
                }
            }
        },
        "/api/trips/search?": {
            "get": {
                "tags": [
                    "Search Trips"
                ],
                "summary": "Search Owners of trips",
                "description": "Search for different fields",
                "operationId": "search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "departure",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "destination",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "search result found"
                    },
                    "404": {
                        "description": "no results found"
                    }
                }
            }
        },
        "/api/profiles/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the profile of the user",
                "description": "Get user's profile",
                "operationId": "getProfile",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "number",
                        "required": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the profile of the user",
                "description": "Get user's profile",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Profile Updated successfully"
                    }
                }
            }
        },
        "/api/users/resetPassword/{resetLinkToken}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "reset password",
                "description": "User reset password",
                "operationId": "reset",
                "parameters": [
                    {
                        "name": "resetLinkToken",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "token on the reset link"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "password reset successfully"
                    },
                    "401": {
                        "description": "Invalid token"
                    },
                    "404": {
                        "description": "reset Link token doesn't exist"
                    }
                }
            }
        },
        "/auth/google/": {
            "get": {
                "tags": [
                    "Social Auth"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/facebook/": {
            "get": {
                "tags": [
                    "Social Auth"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/users/signin": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User Login Endpoint",
                "description": "sign-in the user",
                "operationId": "signIn",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User credentials needed to login in",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user logged in successfully"
                    }
                }
            }
        },
        "/api/users/logout": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Users can log out",
                "description": "Log out users",
                "operationId": "userLogout",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully logged out"
                    },
                    "500": {
                        "description": "Invalid Token,"
                    },
                    "401": {
                        "description": "Bad requet, User already logout"
                    }
                }
            }
        },
        "/user/confirmation/{email}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "confirm registrations",
                "description": "Confirmation of registrations",
                "operationId": "useremail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userUpdate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "confirmed"
                    }
                }
            }
        },
        "/api/users/settings": {
            "patch": {
                "tags": [
                    "SuperAdmin"
                ],
                "summary": "change user roles",
                "description": "change user roles",
                "operationId": "changeRole",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "super admin token to change the role"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/userRoleUpdate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "role updated successfully"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/api/trips/{id}/comment": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "posting comment on travel request",
                "description": "travel request comment",
                "operationId": "postComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "from sign in endpoint"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "from trip table"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/postComment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "comment submitted successfully"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/api/trips/{id}/comments/{tripId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List of comments",
                "description": "travel request comment",
                "operationId": "getlist",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "from sign in endpoint"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "from trip table"
                    },
                    {
                        "in": "path",
                        "name": "tripId",
                        "required": true,
                        "description": "is from comment table"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/api/trips/{id}/comments": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "delete a comment",
                "description": "delete a comment",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "from sign in endpoint"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "from Comment table"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "comment deleted successfully"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/api/trips": {
            "post": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/requestTrip"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "trip request saved"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "getting all requests",
                "description": "users can get trip requests",
                "operationId": "getRequests",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "trip request retrieved"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/api/trips/{id}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/requestTrip"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "trip request saved"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "type": "number",
                        "required": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "trip request saved"
                    },
                    "401": {
                        "description": "invalid token"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "getProfile": {
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "updateUser": {
            "properties": {
                "fname": {
                    "type": "string"
                },
                "lname": {
                    "type": "string"
                },
                "phone": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "profileimage": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                }
            }
        },
        "userUpdate": {
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "forgotPassword": {
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "properties": {
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "userRoleUpdate": {
            "properties": {
                "userEmail": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                }
            }
        },
        "postComment": {
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "userSignUp": {
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "roles": {
            "properties": {
                "userEmail": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                }
            }
        },
        "userLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requestTrip": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "number"
                },
                "to": {
                    "type": "number"
                },
                "travel_date": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                },
                "travel_reason": {
                    "type": "string"
                }
            }
        }
    }
}